name: Issue Assignment

on:
  issues:
    types: [opened]

jobs:
  auto-assign:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: 'Check issue creator'
        id: check_creator
        run: echo "::set-output name=is-owner::$(if [ '${{ github.event.issue.user.login }}' == '${{ github.repository_owner }}' ]; then echo 'true'; else echo 'false'; fi)"
        
      - name: 'Auto-assign issue creator'
        if: steps.check_creator.outputs.is-owner == 'false'
        uses: pozil/auto-assign-issue@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          assignees: ${{ github.event.issue.user.login }}
        id: auto_assign
        run: |
          if [ "${{ steps.auto_assign.outputs.success }}" == "true" ]; then
            echo "::set-output name=issue-assigned::true"
          else
            echo "::set-output name=issue-assigned::false"
          fi

      - name: Add Labels to Issues
        if: steps.auto_assign.outputs.issue-assigned == 'true'
        uses: actions-ecosystem/action-add-labels@v1.1.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            SWOC

      - name: Add Comment to Issue
        if: steps.auto_assign.outputs.issue-assigned == 'true'
        id: add_comment
        run: |
          COMMENT=$(cat <<EOF
          {
            "body": "Thanks for creating the issue in Car Rental!\nBefore you start working on your PR, please make sure to:\n - ⭐ Star the repository if you haven't already.\n - Pull the latest changes to avoid any merge conflicts.\n - Attach before & after screenshots in your PR for clarity.\n - Include the issue number in your PR description for better tracking.\n - Don't forget to follow [@saurabh-dev-vns](https://github.com/saurabh-dev-vns) – Project Admin – for more updates!\n\n We're excited to see your contribution as part of SWOC 2K@5! 🎉\n Happy open-source contributing!"
          }
          EOF
          )
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" \
            -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            -d "$COMMENT")
          cat response.json
          if [ "$RESPONSE" -ne 201 ]; then
            echo "Failed to add comment"
            echo "::set-output name=comment-added::false"
            exit 1
          else
            echo "::set-output name=comment-added::true"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}